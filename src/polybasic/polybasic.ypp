%{
   // C decls go here
#include <stdio.h>
#include <string.h>

#include "rational.hpp"
#include "tree.hpp"
#include "dumptree.hpp"
#include "lex.yy.hpp"
#include "safe_strdup.hpp"

int remsleep = 0;
void yyerror(const char *s);

Tree *copytree(Tree *tree) {
   Tree *ret = (Tree *)malloc(sizeof(Tree));
   memcpy(ret, tree, sizeof(Tree));
   return ret;
}

/*
Tree *emptytree(void) {
   Tree *ret = (Tree *)calloc(1, sizeof(Tree));
   return ret;
}
*/

#define DEBUG

Tree *programtree;
%}

%union {
   Tree u;
}

%type <u> program
%type <u> line
%type <u> linelist

%type <u> varname
%type <u> varlist

%type <u> arrayref
%type <u> arraydim
%type <u> arraydimlist

%type <u> constant
%type <u> constlist

%type <u> dconst
%type <u> iconst
%type <u> rconst
%type <u> sconst

%type <u> expression
%type <u> exprlist

%type <u> label
%type <u> labellist

%type <u> statement

%type <u> inputstmt
%type <u> readstmt
%type <u> restorestmt
%type <u> datastmt
%type <u> printstmt
%type <u> repeatstmt
%type <u> controlstmt
%type <u> optionbase
%type <u> dimstmt
%type <u> randomize
%type <u> remstatement

%type <u> assign

%type <u> relation

%type <u> defstatement
%type <u> paramlist

%locations

/* reserved words */
%token YYBASE
%token YYDATA
%token YYDEF
%token YYDEFCALL
%token YYDIM
%token YYEND
%token YYFOR
%token YYGO
%token YYGOSUB
%token YYGOTO
%token YYIF
%token YYINPUT
%token YYLET
%token YYNEXT
%token YYON
%token YYOPTION
%token YYPRINT
%token YYRANDOMIZE
%token YYREAD
%token YYREM
%token YYRESTORE
%token YYRETURN
%token YYSTEP
%token YYSTOP
%token YYSUB
%token YYTHEN
%token YYTO
/* function names, not many, so make 'em tokens */
%token YYABS
%token YYATN
%token YYCOS
%token YYDBL
%token YYEXP
%token YYINT
%token YYLOG
%token YYRAT
%token YYRND
%token YYSGN
%token YYSIN
%token YYSQR
%token YYSTR
%token YYTAN
/* and other stuff */

%token YYVARNAME
%token YYARRAYREF
%token YYARRAYDIM

%token YYDOUBLE
%token YYSTRING
%token YYINTEGER
%token YYRATIONAL

%token YYRELATION
%token YYASSIGN
%token YYASSIGNARRAYREF

%token YYIPSEP

%token YYLABEL
%token YYEOL

%left '&'
%left '+'
%left '-'
%left '*'
%left '/'
%left '^'

%%

program        : linelist
                  {
                     // mischief managed!
                     $$ = $1;
                     programtree = copytree(&$$);
                  }
               ;

linelist       : line
                  {
                     $$ = $1;
                  }
               | line linelist
                  {
                     $$ = $1;
                     $$.next = copytree(&$2);
                  }
               ;

line           : YYEOL
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYREM;
                  }
               | statement YYEOL
                  {
                     $$ = $1;
                     $$.label = NULL;
                  }
               | label statement YYEOL
                  {
                     $$ = $2;
                     $$.label = strdup($1.sval);
                  }
               | remstatement error YYEOL
                  {
                     $$ = $1;
                     yyerrok;
                     remsleep = 0;
                  }
               | label remstatement error YYEOL
                  {
                     $$ = $2;
                     $$.label = strdup($1.sval);
                     yyerrok;
                     remsleep = 0;
                  }
               ;

remstatement   : YYREM
                  {
                     remsleep = 1;
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYREM;
                  }
               ;

statement      : assign
                  {
                     $$ = $1;
                  }
               | controlstmt
                  {
                     $$ = $1;
                  }
               | datastmt
                  {
                     $$ = $1;
                  }
               | repeatstmt
                  {
                     $$ = $1;
                  }
               | printstmt
                  {
                     $$ = $1;
                  }
               | inputstmt
                  {
                     $$ = $1;
                  }
               | readstmt
                  {
                     $$ = $1;
                  }
               | restorestmt
                  {
                     $$ = $1;
                  }
               | optionbase
                  {
                     $$ = $1;
                  }
               | dimstmt
                  {
                     $$ = $1;
                  }
               | randomize
                  {
                     $$ = $1;
                  }
               | defstatement
                  {
                     $$ = $1;
                  }
               ;

defstatement   : YYDEF varname '[' paramlist ']' expression
                  {
                     $$.line = yylineno;
                     $$.col = $2.col;
                     $$.op = YYDEF;
                     $$.sval = strdup($2.sval);
                     $$.left = copytree(&$4);
                     $$.right = copytree(&$6);
                  }
               | YYDEF varname '[' ']' expression
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYDEF;
                     $$.sval = strdup($2.sval);
                     $$.left = NULL;
                     $$.right = copytree(&$5);
                  }
               ;

paramlist      : varname YYIPSEP paramlist
                  {
                     $$ = $1;
                     $$.middle = copytree(&$3);
                  }
               | varname
                  {
                     $$ = $1;
                  }
               ;

optionbase     : YYOPTION YYBASE iconst
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYBASE;
                     $$.ival = $3.ival;
                  }
               ;

dimstmt        : YYDIM arraydimlist
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYDIM;
                     $$.right = copytree(&$2);
                  }
               ;

arraydimlist   : arraydim YYIPSEP arraydimlist
                  {
                     $$ = $1;
                     $$.middle = copytree(&$3);
                  }
               | arraydim
                  {
                     $$ = $1;
                  }
               ;

randomize      : YYRANDOMIZE
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYRANDOMIZE;
                  }
              ;

datastmt    : YYDATA constlist
               {
                  $$.line = yylineno;
                  $$.col = yyloc.first_column;
                  $$.op = YYDATA;
                  $$.right = copytree(&$2);
               }
            ;

restorestmt : YYRESTORE
               {
                  $$.line = yylineno;
                  $$.col = yyloc.first_column;
                  $$.op = YYRESTORE;
               }
            ;

readstmt    : YYREAD varlist
               {
                  $$.line = yylineno;
                  $$.col = yyloc.first_column;
                  $$.op = YYREAD;
                  $$.right = copytree(&$2);
               }
            ;

printstmt   : YYPRINT exprlist
               {
                  $$.line = yylineno;
                  $$.col = yyloc.first_column;
                  $$.op = YYPRINT;
                  $$.middle = copytree(&$2);
               }
            | YYPRINT
               {
                  $$.line = yylineno;
                  $$.col = yyloc.first_column;
                  $$.op = YYPRINT;
                  $$.middle = NULL;
               }
            ;

controlstmt    : YYGO YYTO label
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYGOTO;
                     $$.sval = strdup($3.sval);
                  }
               | YYGOTO label
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYGOTO;
                     $$.sval = strdup($2.sval);
                  }
               | YYGO YYSUB label
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYGOSUB;
                     $$.sval = strdup($3.sval);
                  }
               | YYGOSUB label
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYGOSUB;
                     $$.sval = strdup($2.sval);
                  }
               | YYIF expression relation expression YYTHEN label
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYIF;
                     $$.sval = strdup($3.sval);
                     $$.left = copytree(&$2);
                     $$.middle = copytree(&$6);
                     $$.right = copytree(&$4);
                  }
               | YYON expression YYGO YYTO labellist
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYON;
                     $$.ival = 0;
                     $$.left = copytree(&$2);
                     $$.right = copytree(&$5);
                  }
               | YYON expression YYGOTO labellist
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYON;
                     $$.ival = 0;
                     $$.left = copytree(&$2);
                     $$.right = copytree(&$4);
                  }
               | YYON expression YYGO YYSUB labellist
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYON;
                     $$.ival = 1;
                     $$.left = copytree(&$2);
                     $$.right = copytree(&$5);
                  }
               | YYON expression YYGOSUB labellist
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYON;
                     $$.ival = 1;
                     $$.left = copytree(&$2);
                     $$.right = copytree(&$4);
                  }
               | YYRETURN
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYRETURN;
                  }
               | YYSTOP
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYSTOP;
                  }
               | YYEND
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYEND;
                  }
               ;

relation       : YYRELATION
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYRELATION;
                     $$.sval = strdup(yytext);
                  }
               ;

repeatstmt     : YYFOR varname YYASSIGN expression YYTO expression
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYFOR;
                     $$.sval = strdup($2.sval);
                     $$.left = copytree(&$4);
                     $$.right = copytree(&$6);
                     $$.middle = NULL;
                  }
               | YYFOR varname YYASSIGN expression YYTO expression YYSTEP expression
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYFOR;
                     $$.sval = strdup($2.sval);
                     $$.left = copytree(&$4);
                     $$.right = copytree(&$6);
                     $$.middle = copytree(&$8);
                  }
               | YYNEXT varname
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYNEXT;
                     $$.sval = strdup($2.sval);
                  }
               ;

label          : varname
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYLABEL;
                     $$.sval = strdup($1.sval);
                  }
               | YYINTEGER
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYLABEL;
                     $$.sval = strdup(yytext);
                  }
               ;

labellist      : label
                  {
                     $$ = $1;
                  }
               | label YYIPSEP labellist
                  {
                     $$ = $1;
                     $$.middle = copytree(&$3);
                  }
               ;

varname        : YYVARNAME
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYVARNAME;
                     $$.sval = strdup(yytext);
                  }
               ;

arrayref       : varname '(' expression ')'
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYARRAYREF;
                     $$.sval = strdup($1.sval);
                     $$.left = copytree(&$3);
                  }
               | varname '(' expression YYIPSEP expression ')'
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYARRAYREF;
                     $$.sval = strdup($1.sval);
                     $$.left = copytree(&$3);
                     $$.right = copytree(&$5);
                  }
               ;

arraydim       : varname '(' iconst ')'
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYARRAYDIM;
                     $$.sval = strdup($1.sval);
                     $$.left = copytree(&$3);
                     $$.right = NULL;
                  }
               | varname '(' iconst YYIPSEP iconst ')'
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYARRAYDIM;
                     $$.sval = strdup($1.sval);
                     $$.left = copytree(&$3);
                     $$.right = copytree(&$5);
                  }
               ;

varlist        : varname YYIPSEP varlist
                  {
                     $$ = $1;
                     $$.middle = copytree(&$3);
                  }
               | varname
                  {
                     $$ = $1;
                  }
               ;

constant       : dconst
                  {
                     $$ = $1;
                  }
               | iconst
                  {
                     $$ = $1;
                  }
               | rconst
                  {
                     $$ = $1;
                  }
               | sconst
                  {
                     $$ = $1;
                  }
               ;

constlist      : constant YYIPSEP constlist
                  {
                     $$ = $1;
                     $$.middle = copytree(&$3);
                  }
               | constant
                  {
                     $$ = $1;
                  }
               ;

expression     : expression '+' expression
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = '+';
                     $$.left = copytree(&$1);
                     $$.right = copytree(&$3);
                  }
               | expression '&' expression
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = '&';
                     $$.left = copytree(&$1);
                     $$.right = copytree(&$3);
                  }
               | expression '-' expression
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = '-';
                     $$.left = copytree(&$1);
                     $$.right = copytree(&$3);
                  }
               | expression '*' expression
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = '*';
                     $$.left = copytree(&$1);
                     $$.right = copytree(&$3);
                  }
               | expression '/' expression
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = '/';
                     $$.left = copytree(&$1);
                     $$.right = copytree(&$3);
                  }
               | expression '^' expression
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = '^';
                     $$.left = copytree(&$1);
                     $$.right = copytree(&$3);
                  }
               | '(' expression ')'
                  {
                     $$ = $2;
                  }
               | YYABS '(' expression ')'
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYABS;
                     $$.left = copytree(&$3);
                  }
               | YYATN '(' expression ')'
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYATN;
                     $$.left = copytree(&$3);
                  }
               | YYCOS '(' expression ')'
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYCOS;
                     $$.left = copytree(&$3);
                  }
               | YYEXP '(' expression ')'
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYEXP;
                     $$.left = copytree(&$3);
                  }
               | YYLOG '(' expression ')'
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYLOG;
                     $$.left = copytree(&$3);
                  }
               | YYRND
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYRND;
                  }
               | YYSGN '(' expression ')'
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYSGN;
                     $$.left = copytree(&$3);
                  }
               | YYSIN '(' expression ')'
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYSIN;
                     $$.left = copytree(&$3);
                  }
               | YYSQR '(' expression ')'
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYSQR;
                     $$.left = copytree(&$3);
                  }
               | YYTAN '(' expression ')'
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYTAN;
                     $$.left = copytree(&$3);
                  }
               | YYDBL '(' expression ')'
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYDBL;
                     $$.left = copytree(&$3);
                  }
               | YYINT '(' expression ')'
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYINT;
                     $$.left = copytree(&$3);
                  }
               | YYRAT '(' expression ')'
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYRAT;
                     $$.left = copytree(&$3);
                  }
               | YYSTR '(' expression ')'
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYSTR;
                     $$.left = copytree(&$3);
                  }
               | varname '[' exprlist ']'
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYDEFCALL;
                     $$.sval = strdup($1.sval);
                     $$.left = copytree(&$3);
                  }
               | varname '[' ']'
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYDEFCALL;
                     $$.sval = strdup($1.sval);
                     $$.left = NULL;
                  }
               | arrayref
                  {
                     $$ = $1;
                  }
               | varname
                  {
                     $$ = $1;
                  }
               | constant
                  {
                     $$ = $1;
                  }
               ;

exprlist       : expression YYIPSEP exprlist
                  {
                     $$ = $1;
                     $$.middle = copytree(&$3);
                  }
               | expression
                  {
                     $$ = $1;
                  }
               ;

inputstmt      : YYINPUT varlist
                  {
                     $$.line = yylineno;
                     $$.col = yyloc.first_column;
                     $$.op = YYINPUT;
                     $$.right = copytree(&$2);
                  }
               ;

assign      : varname YYASSIGN expression
               {
                  $$.line = yylineno;
                  $$.col = yyloc.first_column;
                  $$.op = YYASSIGN;
                  $$.left = copytree(&$1);
                  $$.right = copytree(&$3);
               }
            | YYLET varname YYASSIGN expression
               {
                  $$.line = yylineno;
                  $$.col = yyloc.first_column;
                  $$.op = YYASSIGN;
                  $$.sval = $2.sval;
                  $$.left = copytree(&$2);
                  $$.right = copytree(&$4);
               }
            | arrayref YYASSIGN expression
               {
                  $$.line = yylineno;
                  $$.col = yyloc.first_column;
                  $$.op = YYASSIGNARRAYREF;
                  $$.left = copytree(&$1);
                  $$.right = copytree(&$3);
               }
            | YYLET arrayref YYASSIGN expression
               {
                  $$.line = yylineno;
                  $$.col = yyloc.first_column;
                  $$.op = YYASSIGNARRAYREF;
                  $$.sval = $2.sval;
                  $$.left = copytree(&$2);
                  $$.right = copytree(&$4);
               }
            ;

dconst      : YYDOUBLE
               {
                  $$.line = yylineno;
                  $$.col = yyloc.first_column;
                  $$.op = YYDOUBLE;
                  $$.dval = atof(yytext);
               }
            ;

iconst      : YYINTEGER
               {
                  $$.line = yylineno;
                  $$.col = yyloc.first_column;
                  $$.op = YYINTEGER;
                  $$.ival = atoll(yytext);
               }
            ;

rconst      : YYRATIONAL
               {
                  $$.line = yylineno;
                  $$.col = yyloc.first_column;
                  $$.op = YYRATIONAL;
                  $$.rval = new Rational(yytext);
               }
            ;

sconst      : YYSTRING
               {
                  $$.line = yylineno;
                  $$.col = yyloc.first_column;
                  $$.op = YYSTRING;
                  char *buffer = (char *)alloca(strlen(yytext + 1));
                  char *q = buffer;
                  char *s = yytext + 1;
                  while(*s) {
                     if (*s == '\\') {
                        s++;
                     }
                     *q++ = *s++;
                  }
                  q[-1] = 0;
                  $$.sval = strdup(buffer);
               }
            ;
%%

// TODO FIX why do we neeed this, shouldn't this be in a skeleton somewhere?
void yyerror(const char *s) {
   if (!remsleep) {
      printf("yyerror: %s line %d col %d '%s'\n", s, yylineno, yylloc.first_column, yytext);
   }
}

