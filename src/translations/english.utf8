####
# autotranslation for the "english" language
####
#
# THIS FILE WAS AUTOMATICALLY GENERATED
#
# this file was autogenerated from google translate there are bound to
# be problems, mistranslations, and cultural problems
#
# it is our sincerest hope that these will be corrected by the community
# over time
#
# we kindly ask for your patience, and any contributions you may wish
# to make
#
# the dev team is not fluent in these languages, and no actual offense
# is intended
#
# obviously, many of these can be shortened.  to do so properly would
# take a fluent language speaker who is also familiar with the BASIC
# programming language
#
# this file should be utf8
#
# entries on the left are the actual BASIC keywords
#
# entries on the right are the native versions of those keywords
#
# blank lines are allowed

[keywords]

# from ECMA-55 §5.2

END <= END          # the end statement

# from ECMA-55 §9

ABS <= ABS          # the absolute value function
ATN <= ATN          # the trigonomic arctangent function
COS <= COS          # the trigonomic cosine function
EXP <= EXP          # the exponential / power function
INT <= INT          # the integer / floor function
LOG <= LOG          # the natural log function
RND <= RND          # generate random number
SGN <= SGN          # determine the sign
SIN <= SIN          # the trigonomic sine function
SQR <= SQR          # the square root function
TAN <= TAN          # the trigonomic tangent function
DBL <= DBL          # convert to double
STR <= STR          # convert to string
RAT <= RAT          # convert to rational

TAB <= TAB          # C-64ism
CHR <= CHR          # C-64ism

# from ECMA-55 §10

DEF <= DEF          # for user defined functions

# from ECMA-55 §11

LET <= LET          # for variable assignment

# from ECMA-55 §12
# NB: ECMA-55 has no ELSE statement

GOSUB <= GOSUB      # formed from GO and SUB if no direct translation exists
GOTO <= GOTO        # formed from GO and TO if no direct translation exists
TO <= TO            # part of for/to/step/next constructs
IF <= IF            # part of if/then constructs
THEN <= THEN        # part of if/then constructs
ON <= ON            # a sort of a switch statement
RETURN <= RETURN    # used to exit a subroutine
STOP <= STOP        # command to stop execution

AND <= AND          # C-64ism
OR <= OR            # C-64ism
NOT <= NOT          # C-64ism

# from ECMA-55 §13
# NB: translation for TO is in §12

FOR <= FOR          # part of for/to/step/next constructs
STEP <= STEP        # part of for/to/step/next constructs
NEXT <= NEXT        # part of for/to/step/next constructs

# from ECMA-55 §14

PRINT <= PRINT      # to print things out

# from ECMA-55 §15

INPUT <= INPUT      # the input statement

# from ECMA-55 §16

READ <= READ        # part of read / restore
RESTORE <= RESTORE  # part of read / restore

# from ECMA-55 §17

DATA <= DATA        # to embed data in the program

# from ECMA-55 §18

DIM <= DIM          # dimension arrays
OPTION <= OPTION    # see ECMA-55 §18.1
BASE <= BASE        # see ECMA-55 §18.1

# from ECMA-55 §19

REM <= REM          # see ECMA-55 §18.1

# from ECMA-55 §20

RANDOMIZE <= RANDOMIZE

#### end of ECMA-55 defined constants
#
# it is worth noting that the following constants,
# while they may appear in other versions of BASIC,
# do NOT appear in ECMA-55:
#
# LOOP <= LOOP  # designed to evoke an error for testing

[errors]
AND NO LANGUAGE GIVEN ON COMMAND LINE.  EXITING.	AND NO LANGUAGE GIVEN ON COMMAND LINE.  EXITING.
ARRAY ALREADY DEFINED	ARRAY ALREADY DEFINED
ARRAY INDEX OUT OF BOUNDS	ARRAY INDEX OUT OF BOUNDS
ARRAY INDEX SIZE MISMATCH	ARRAY INDEX SIZE MISMATCH
ARRAY SUBSCRIPT NOT A NUMBER	ARRAY SUBSCRIPT NOT A NUMBER
ARRAY USED AS VARIABLE	ARRAY USED AS VARIABLE
CANNOT ACCESS DIRECTORY	CANNOT ACCESS DIRECTORY
CANNOT ASSIGN TO DEFINITION	CANNOT ASSIGN TO DEFINITION
CANNOT ASSIGN TO FUNCTION	CANNOT ASSIGN TO FUNCTION
DATA INPUT UNDERFLOW	DATA INPUT UNDERFLOW
DATA READ UNDERFLOW	DATA READ UNDERFLOW
DEFINITION CYCLE DISCOVERED	DEFINITION CYCLE DISCOVERED
ERROR	ERROR
FAILURE	FAILURE
FUNCTION DEFINITION MULTIPLY DEFINED	FUNCTION DEFINITION MULTIPLY DEFINED
FUNCTION DEFINITION PARAMETER MISMATCH	FUNCTION DEFINITION PARAMETER MISMATCH
GOSUB STACK OVERFLOW	GOSUB STACK OVERFLOW
GOSUB STACK UNDERFLOW	GOSUB STACK UNDERFLOW
INCORRECT NUMBER OF PARAMETERS	INCORRECT NUMBER OF PARAMETERS
INDEX LESS THAN 1	INDEX LESS THAN 1
INDEX OUT OF RANGE	INDEX OUT OF RANGE
LABEL ALREADY DEFINED	LABEL ALREADY DEFINED
LEFT / RIGHT OPERATION MISMATCH	LEFT / RIGHT OPERATION MISMATCH
NEXT ON FOR LOOP WITH STRING VARIABLE	NEXT ON FOR LOOP WITH STRING VARIABLE
OPERAND MISMATCH	OPERAND MISMATCH
OPTION REQUIRES A LANGUAGE	OPTION REQUIRES A LANGUAGE
PLEASE CHECK LANGUAGE SETTINGS OR ENVIRONMENT VARIABLE	PLEASE CHECK LANGUAGE SETTINGS OR ENVIRONMENT VARIABLE
STRING MATH LOGIC ERROR	STRING MATH LOGIC ERROR
SYNTAX ERROR	SYNTAX ERROR
UNABLE TO OPEN FILE	UNABLE TO OPEN FILE
UNABLE TO OPEN FILE FOR READING	UNABLE TO OPEN FILE FOR READING
UNDEFINED LABEL	UNDEFINED LABEL
UNHANDLED OPERATION	UNHANDLED OPERATION
UNHANDLED OPERATION CODE	UNHANDLED OPERATION CODE
UNKNOWN IF LABEL	UNKNOWN IF LABEL
UNKNOWN OP IN PARAMETER SUBSTITUTION	UNKNOWN OP IN PARAMETER SUBSTITUTION
UNRECOGNIZED DOUBLE MATH OPERATION	UNRECOGNIZED DOUBLE MATH OPERATION
UNRECOGNIZED GOSUB LABEL	UNRECOGNIZED GOSUB LABEL
UNRECOGNIZED GOTO LABEL	UNRECOGNIZED GOTO LABEL
UNRECOGNIZED INPUT	UNRECOGNIZED INPUT
UNRECOGNIZED INTEGER MATH OPERATION	UNRECOGNIZED INTEGER MATH OPERATION
UNRECOGNIZED MATH TYPE	UNRECOGNIZED MATH TYPE
UNRECOGNIZED NEXT VARIABLE	UNRECOGNIZED NEXT VARIABLE
UNRECOGNIZED OP IN PRINT	UNRECOGNIZED OP IN PRINT
UNRECOGNIZED RATIONAL MATH OPERATION	UNRECOGNIZED RATIONAL MATH OPERATION
UNRECOGNIZED VARIABLE TYPE	UNRECOGNIZED VARIABLE TYPE
UNSET ENVIRONMENT VARIABLE	UNSET ENVIRONMENT VARIABLE
VARIABLE OR ARRAY HAS NO VALUE	VARIABLE OR ARRAY HAS NO VALUE
VARIABLE USED AS ARRAY	VARIABLE USED AS ARRAY
