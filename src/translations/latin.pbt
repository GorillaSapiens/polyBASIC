####
# autotranslation for the "latin" language
####
#
# THIS FILE WAS AUTOMATICALLY GENERATED
#
# this file was autogenerated from google translate there are bound to
# be problems, mistranslations, and cultural problems
#
# it is our sincerest hope that these will be corrected by the community
# over time
#
# we kindly ask for your patience, and any contributions you may wish
# to make
#
# the dev team is not fluent in these languages, and no actual offense
# is intended
#
# obviously, many of these can be shortened.  to do so properly would
# take a fluent language speaker who is also familiar with the BASIC
# programming language
#
# this file should be utf8
#
# entries on the left are the actual BASIC keywords
#
# entries on the right are the native versions of those keywords
#
# blank lines are allowed

[keywords]

# from ECMA-55 §5.2

END <= FINIS                      # the end statement

# from ECMA-55 §9

ABS <= ABSOLUTUS                  # the absolute value function
ATN <= INVERSUMTANGENTEM          # the trigonomic arctangent function
COS <= COSINUS                    # the trigonomic cosine function
EXP <= EXPONENTIALIS              # the exponential / power function
INT <= INTEGER                    # the integer / floor function
LOG <= LOGARITHMUS                # the natural log function
RND <= VOLUMEN                    # generate random number
SGN <= SIGNUM                     # determine the sign
SIN <= SINUS                      # the trigonomic sine function
SQR <= QUADRATUS                  # the square root function
TAN <= TANGENS                    # the trigonomic tangent function
DBL <= DUPLEX                     # convert to double
STR <= TEXT                       # convert to string
RAT <= RATIONALIS                 # convert to rational

# from ECMA-55 §10

DEF <= DEFINIRE                   # for user defined functions

# from ECMA-55 §11

LET <= FIAT                       # for variable assignment

# from ECMA-55 §12
# NB: ECMA-55 has no ELSE statement

GO <= PEREO                       # part of the GOTO and GOSUB
GOSUB <= VOCO                     # formed from GO and SUB if no direct translation exists
GOTO <= JUMP                      # formed from GO and TO if no direct translation exists
TO <= UT                          # part of for/to/step/next constructs
IF <= SI                          # part of if/then constructs
THEN <= TUM                       # part of if/then constructs
SUB <= SUB                        # beware, used as part of "go sub"
ON <= SWITCH                      # a sort of a switch statement
RETURN <= REDITUS                 # used to exit a subroutine
STOP <= COMPLEXUS                 # command to stop execution

# from ECMA-55 §13
# NB: translation for TO is in §12

FOR <= EX                         # part of for/to/step/next constructs
STEP <= GRADUS                    # part of for/to/step/next constructs
NEXT <= DEINDE                    # part of for/to/step/next constructs

# from ECMA-55 §14

PRINT <= PRINT                    # to print things out

# from ECMA-55 §15

INPUT <= INPUT                    # the input statement

# from ECMA-55 §16

READ <= LEGERE                    # part of read / restore
RESTORE <= RELIGIO                # part of read / restore

# from ECMA-55 §17

DATA <= NOTITIA                   # to embed data in the program

# from ECMA-55 §18

DIM <= DIMENSIO                   # dimension arrays
OPTION <= OPTIO                   # see ECMA-55 §18.1
BASE <= BASIS                     # see ECMA-55 §18.1

# from ECMA-55 §19

REM <= ADNOTATIO                  # see ECMA-55 §18.1

# from ECMA-55 §20

RANDOMIZE <= RANDOMIZE

#### end of ECMA-55 defined constants
#
# it is worth noting that the following constants,
# while they may appear in other versions of BASIC,
# do NOT appear in ECMA-55:
#
# LOOP <= LOOP  # designed to evoke an error for testing

[errors]
AND NO LANGUAGE GIVEN ON COMMAND LINE.  EXITING.	Et non linguam dedit in order versus. Exivit.
ARRAY ALREADY DEFINED	Ordinata iam defined
ARRAY INDEX OUTSIDE OF BOUNDS	Ordinata index extra terminos
CANNOT ACCESS DIRECTORY	Potest obvius Directory
DATA INPUT UNDERFLOW	Data input underflow
DATA READ UNDERFLOW	Data Read underflow
DEFINITION CYCLE DISCOVERED	Definitio exolvuntur inventa
ERROR	Error
FOR VARIABLE MULTIPLY DEFINED	Nam variabilis multiplicentur defined
FUNCTION DEFINITION MULTIPLY DEFINED	Function definitione definitur
FUNCTION DEFINITION PARAMETER MISMATCH	Function definitio parametch Mismatch
GOSUB STACK OVERFLOW	Gessectus AMCFERO
GOSUB STACK UNDERFLOW	Gessub ACERVUS underflow
INDEX OUT OF RANGE	Index de range
LABEL ALREADY DEFINED	Pittacium iam defined
LEFT / RIGHT OPERATION MISMATCH	Sinistram / ius operationem mismatch
NEGATIVE INDEX	Negans index
NEXT ON FOR LOOP WITH STRING VARIABLE	Deinde in pro loop cum filum variabilis
OPERAND MISMATCH	Operand mismatch
OPTION REQUIRES A LANGUAGE	Optio postulat a lingua
PLEASE CHECK LANGUAGE SETTINGS OR ENVIRONMENT VARIABLE	Placere reprehendo lingua occasus vel environment variabilis
STRING MATH LOGIC ERROR	Math Math Logica Error
UNABLE TO OPEN FILE	'Non aperire file
UNABLE TO OPEN TO OPEN FILE FOR READING	'Non aperire aperire file ad Lectio
UNDEFINED LABEL	Undefined Label
UNHANDLED OPERATION	Unharled operatio
UNHANDLED OPERATION CODE	Unhared operatio codice
UNKNOWN IF LABEL	Ignotum si label
UNRECOGNIZED DOUBLE MATH OPERATION	Duplex duplici math operandi
UNRECOGNIZED FUNCTION FUNCTION DEFINITION	Cognita munus munus definitio
UNRECOGNIZED GOSUB LABEL	Cognita Gosob Label
UNRECOGNIZED GOTO LABEL	Cognita gata label
UNRECOGNIZED INPUT	Input
UNRECOGNIZED INTEGER MATH OPERATION	Cognita integer math operandi
UNRECOGNIZED MATH TYPE	Cognita math type
UNRECOGNIZED NEXT VARIABLE	Latuit Next variabilis
UNRECOGNIZED OP IN PRINT	Cognita OP in Print
UNRECOGNIZED RATIONAL MATH OPERATION	Cognita rationalis math operandi
UNRECOGNIZED VARIABLE TYPE	Cognita variabilis type
UNSET ENVIRONMENT VARIABLE	Unset environment variabilis
VARIABLE / ARRAY DEFINITION MISMATCH	Variabilis / ordinata Definitio Mismatch
VARIABLE DEFINED AS ARRAY	Variabilis defined as ordinata
VARIABLE DEFINED AS NONARRAY	Variabilis defined ut nonarray
VARIABLE HAS NO VALUE	Variabilis habet valorem
VARIABLE IS NOT AN ARRAY	Variabilis non est ordinata
