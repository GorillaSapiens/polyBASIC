####
# autotranslation for the "latin" language
####
#
# THIS FILE WAS AUTOMATICALLY GENERATED
#
# this file was autogenerated from google translate
# there are bound to be problems, mistranslations, and cultural problems
#
# it is our sincerest hope that these will be corrected by the community
# over time
#
# we kindly ask for your patience, and any contributions you may wish to make
#
# the dev team is not fluent in these languages, and no actual offense is intended
#
# obviously, many of these can be shortened.  to do so properly would take
# a fluent language speaker who is also familiar with the BASIC programming
# language
#
# this file should be utf8
# entries on the left are the actual BASIC keywords
# entries on the right are the native versions of those keywords
# blank lines are allowed

[keywords]

# from ECMA-55 §5.2

END <= FINIS          # the end statement

# from ECMA-55 §9

ABS <= ABSOLUTUS          # the absolute value function
ATN <= INVERSUMTANGENTEM          # the trigonomic arctangent function
COS <= COSINUS          # the trigonomic cosine function
EXP <= EXPONENTIALIS          # the exponential / power function
INT <= INTEGER          # the integer / floor function
LOG <= LOGARITHMUS          # the natural log function
RND <= VOLUMEN          # generate random number
SGN <= SIGNUM          # determine the sign
SIN <= SINUS          # the trigonomic sine function
SQR <= QUADRATUS          # the square root function
TAN <= TANGENS          # the trigonomic tangent function
DBL <= DUPLEX          # convert to double

# from ECMA-55 §10

DEF <= DEFINIRE          # for user defined functions

# from ECMA-55 §11

LET <= FIAT          # for variable assignment

# from ECMA-55 §12
# NB: ECMA-55 has no ELSE statement

GO <= PEREO            # part of the GOTO and GOSUB
GOSUB <= VOCO      # formed from GO and SUB if no direct translation exists
GOTO <= JUMP        # formed from GO and TO if no direct translation exists
TO <= UT            # part of for/to/step/next constructs
IF <= SI            # part of if/then constructs
THEN <= TUM        # part of if/then constructs
SUB <= SUB          # beware, used as part of "go sub"
ON <= SWITCH            # a sort of a switch statement
RETURN <= REDITUS    # used to exit a subroutine
STOP <= COMPLEXUS        # command to stop execution

# from ECMA-55 §13
# NB: translation for TO is in §12

FOR <= EX          # part of for/to/step/next constructs
STEP <= GRADUS        # part of for/to/step/next constructs
NEXT <= DEINDE        # part of for/to/step/next constructs

# from ECMA-55 §14

PRINT <= PRINT      # to print things out

# from ECMA-55 §15

INPUT <= INPUT      # the input statement

# from ECMA-55 §16

READ <= LEGERE        # part of read / restore
RESTORE <= RELIGIO  # part of read / restore

# from ECMA-55 §17

DATA <= NOTITIA        # to embed data in the program

# from ECMA-55 §18

DIM <= DIMENSIO          # dimension arrays
OPTION <= OPTIO    # see ECMA-55 §18.1
BASE <= BASIS        # see ECMA-55 §18.1

# from ECMA-55 §19

REM <= ADNOTATIO          # see ECMA-55 §18.1

# from ECMA-55 §20

RANDOMIZE <= RANDOMIZE

#### end of ECMA-55 defined constants
#
# it is worth noting that the following constants,
# while they may appear in other versions of BASIC,
# do NOT appear in ECMA-55:
#
# LOOP <= LOOP  # designed to evoke an error for testing

[errors]

# error messages

err0|ERROR: lima {0s}, linea {1i}, columna {2i}

