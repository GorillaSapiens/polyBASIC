####
# autotranslation for the "french" language
####
#
# THIS FILE WAS AUTOMATICALLY GENERATED
#
# this file was autogenerated from google translate there are bound to
# be problems, mistranslations, and cultural problems
#
# it is our sincerest hope that these will be corrected by the community
# over time
#
# we kindly ask for your patience, and any contributions you may wish
# to make
#
# the dev team is not fluent in these languages, and no actual offense
# is intended
#
# obviously, many of these can be shortened.  to do so properly would
# take a fluent language speaker who is also familiar with the BASIC
# programming language
#
# this file should be utf8
#
# entries on the left are the actual BASIC keywords
#
# entries on the right are the native versions of those keywords
#
# blank lines are allowed

[keywords]

# from ECMA-55 §5.2

END <= FIN                      # the end statement

# from ECMA-55 §9

ABS <= VALEURABSOLUE            # the absolute value function
ATN <= TANGENTEINVERSE          # the trigonomic arctangent function
COS <= COSINUS                  # the trigonomic cosine function
EXP <= EXPONENTIEL              # the exponential / power function
INT <= ENTIER                   # the integer / floor function
LOG <= LOGARITHME               # the natural log function
RND <= ROULEAU                  # generate random number
SGN <= SIGNE                    # determine the sign
SIN <= SINUS                    # the trigonomic sine function
SQR <= RACINECARRÉE             # the square root function
TAN <= TANGENTE                 # the trigonomic tangent function
DBL <= DOUBLE                   # convert to double

# from ECMA-55 §10

DEF <= DÉFINIR                  # for user defined functions

# from ECMA-55 §11

LET <= LAISSER                  # for variable assignment

# from ECMA-55 §12
# NB: ECMA-55 has no ELSE statement

GO <= ALLER                     # part of the GOTO and GOSUB
GOSUB <= APPEL                  # formed from GO and SUB if no direct translation exists
GOTO <= SAUT                    # formed from GO and TO if no direct translation exists
TO <= POUR                      # part of for/to/step/next constructs
IF <= SI                        # part of if/then constructs
THEN <= ALORS                   # part of if/then constructs
SUB <= SOUS                     # beware, used as part of "go sub"
ON <= CHANGER                   # a sort of a switch statement
RETURN <= RETOUR                # used to exit a subroutine
STOP <= FINI                    # command to stop execution

# from ECMA-55 §13
# NB: translation for TO is in §12

FOR <= DEPUIS                   # part of for/to/step/next constructs
STEP <= MARCHER                 # part of for/to/step/next constructs
NEXT <= SUIVANT                 # part of for/to/step/next constructs

# from ECMA-55 §14

PRINT <= IMPRIMER               # to print things out

# from ECMA-55 §15

INPUT <= SAISIR                 # the input statement

# from ECMA-55 §16

READ <= LIRE                    # part of read / restore
RESTORE <= RELIER               # part of read / restore

# from ECMA-55 §17

DATA <= DONNÉES                 # to embed data in the program

# from ECMA-55 §18

DIM <= DIMENSION                # dimension arrays
OPTION <= OPTION                # see ECMA-55 §18.1
BASE <= BASE                    # see ECMA-55 §18.1

# from ECMA-55 §19

REM <= REMARQUE                 # see ECMA-55 §18.1

# from ECMA-55 §20

RANDOMIZE <= RANDOMISER

#### end of ECMA-55 defined constants
#
# it is worth noting that the following constants,
# while they may appear in other versions of BASIC,
# do NOT appear in ECMA-55:
#
# LOOP <= LOOP  # designed to evoke an error for testing

[errors]

# error messages

err0|ERREUR: déposer {0s}, doubler {1i}, colonne {2i}

