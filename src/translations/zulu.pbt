####
# autotranslation for the "zulu" language
####
#
# THIS FILE WAS AUTOMATICALLY GENERATED
#
# this file was autogenerated from google translate there are bound to
# be problems, mistranslations, and cultural problems
#
# it is our sincerest hope that these will be corrected by the community
# over time
#
# we kindly ask for your patience, and any contributions you may wish
# to make
#
# the dev team is not fluent in these languages, and no actual offense
# is intended
#
# obviously, many of these can be shortened.  to do so properly would
# take a fluent language speaker who is also familiar with the BASIC
# programming language
#
# this file should be utf8
#
# entries on the left are the actual BASIC keywords
#
# entries on the right are the native versions of those keywords
#
# blank lines are allowed

[keywords]

# from ECMA-55 §5.2

END <= UKUGCINA                          # the end statement

# from ECMA-55 §9

ABS <= INANIELIPHELELE                   # the absolute value function
ATN <= IINVERSETANGENT                   # the trigonomic arctangent function
COS <= ICOSI                             # the trigonomic cosine function
EXP <= UKUVEZA                           # the exponential / power function
INT <= PHETHE                            # the integer / floor function
LOG <= ISILINGANISOSOGAZIDUZEMI          # the natural log function
RND <= QOQA                              # generate random number
SGN <= BHALA                             # determine the sign
SIN <= SINE                              # the trigonomic sine function
SQR <= ISQUAREROOT                       # the square root function
TAN <= INHLIZIYOYAKHONA                  # the trigonomic tangent function
DBL <= BILI                              # convert to double
STR <= STR                               # convert to string
RAT <= RAT                               # convert to rational

# from ECMA-55 §10

DEF <= CHASISELA                         # for user defined functions

# from ECMA-55 §11

LET <= VUMELA                            # for variable assignment

# from ECMA-55 §12
# NB: ECMA-55 has no ELSE statement

GO <= HAMBANGEMOTO                       # part of the GOTO and GOSUB
GOSUB <= MEMEZA                          # formed from GO and SUB if no direct translation exists
GOTO <= GXUMA                            # formed from GO and TO if no direct translation exists
TO <= KWA                                # part of for/to/step/next constructs
IF <= NXA                                # part of if/then constructs
THEN <= KHONA                            # part of if/then constructs
SUB <= INDAWO                            # beware, used as part of "go sub"
ON <= SHINTSHA                           # a sort of a switch statement
RETURN <= BUYISELAEMUVA                  # used to exit a subroutine
STOP <= KUQEDIWE                         # command to stop execution

# from ECMA-55 §13
# NB: translation for TO is in §12

FOR <= UKUSUKA                           # part of for/to/step/next constructs
STEP <= GXATHA                           # part of for/to/step/next constructs
NEXT <= OLANDELAYO                       # part of for/to/step/next constructs

# from ECMA-55 §14

PRINT <= CINDEZELA                       # to print things out

# from ECMA-55 §15

INPUT <= FAKA                            # the input statement

# from ECMA-55 §16

READ <= FUNDA                            # part of read / restore
RESTORE <= XWAYISA                       # part of read / restore

# from ECMA-55 §17

DATA <= UMBHALO                          # to embed data in the program

# from ECMA-55 §18

DIM <= UBUKHULU                          # dimension arrays
OPTION <= UKUKHETHA                      # see ECMA-55 §18.1
BASE <= ISIZINDA                         # see ECMA-55 §18.1

# from ECMA-55 §19

REM <= PHAWULA                           # see ECMA-55 §18.1

# from ECMA-55 §20

RANDOMIZE <= PHUNGULA

#### end of ECMA-55 defined constants
#
# it is worth noting that the following constants,
# while they may appear in other versions of BASIC,
# do NOT appear in ECMA-55:
#
# LOOP <= LOOP  # designed to evoke an error for testing

[errors]

# error messages

err0|UKUPHAMBEKA: ifayili {0s}, ulayini {1i}, insika {2i}

